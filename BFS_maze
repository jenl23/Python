def bfs(x, y):
  qu = deque()
  qu.append((x, y))

  while qu:
    x, y = qu.popleft()

    for i in range(4):
      nx = x + dx[i]
      ny = y + dy[i]

      #공간 넘으면 무시
      if nx < 0 or nx >= n or ny< 0 or ny>= m:
        continue
      #벽인경우 무시
      if graph[nx][ny] == 0:
        continue
      #처음방문시에 최단거리 기록
      if graph[nx][ny] == 1:
        graph[nx][ny] = graph[x][y] + 1
        qu.append((nx, ny))
  return graph[n-1][m-1]

from collections import deque

n, m =map(int, input().split())

graph = []
for i in range(n):
  graph.append(list(map(int, input())))

dx= [-1, 1, 0, 0]
dy= [0, 0, -1, 1]
#상하좌우
print(bfs(0,0))

# bfs(0,0),:(0,0)], g[1,0]=2
#          :(1,0)], g[1,1]=3
#          :(1,1)], g[1,2]=4
