# 금광  다이나믹 프로그매밍
# 테스트케이스 T, N*M행렬, 행렬값
# 2/ 3 4/ 1 3 3 2 2 14 1 0 6 4 7
# 4 4/1 3 1 5 2 2 4 1 5 0 2 3 0 6 1 2
# dp[i][j] = array[i][j] + max(dp[i-1][j-1], dp[i][j-1], dp[i+1][j-1])


for tc in range(int(input())) :
  n, m = map(int, input().split())
  arr = list(map(int, input().split()))

  dp =[]
  index = 0

  for i in range(n):
    dp.append(arr[index:index+m])
    index += m
  
  for j in range(1, m):
    for i in range(n):
      #왼쪽위
      if i==0:left_up =0
      else : left_up = dp[i-1][j-1]

      #왼쪽아래
      if i== n-1:left_down = 0
      else: left_down = dp[i+1][j-1]

      #왼쪽
      left = dp[i][j-1]

      dp[i][j] = dp[i][j] + max(left_up, left_down, left)
  
  #오른쪽에서 최대값
  result = 0  
  for i in range(n):
      result = max(result, dp[i][m-1])
  print(result)
